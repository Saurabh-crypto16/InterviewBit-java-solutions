public class Solution {
    
    static boolean check(ArrayList<Integer> al,int k,long mid)
     {
            //if at any point each painter's job exceed mid then we find a new painter
            
            long sum=0,painter=1;
            for(int i=0;i<al.size();i++)
            {
                sum+=al.get(i);
                if(sum>mid)
                {
                    painter++;
                    sum=al.get(i);
                }
                if(painter>k) //if number of painters required is more than k then task can't be completed
                {
                    return false;
                }
            }
            //if the task can be completed with each painter doing less than k work then true
            return true;
     }
     
    public long paint(int k, int b, ArrayList<Integer> al) {
        
        int n=al.size();
        long max=0,tot=0;
        for(int i=0;i<n;i++)
        {
            tot+=al.get(i);
            if(al.get(i)> max)
            {
                max=al.get(i);
            }
        }
        
        //start=max(al) and end=sum(al) elements
        
        long start=max,end=tot,mid,best=0;
        while(start<=end)
        {
            mid=(start+end)/2;
            if(check(al,k,mid)==true) //is each painter can paint less than or equal to mid and complete the work
            {
                best=mid;
                end=mid-1;
            }
            else
            {
                start=mid+1;
            }
            
        }
        return (best*b)%10000003;
    }
}
