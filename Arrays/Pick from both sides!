/*Find sum of first B elements and if A.size()==B return this as ans.
else take a lptr at B-1 and rptr at A.size()-1 and till lptr>=0 substract lptr from ans 
and add rptr to ans and maintain another variable to store min of ans.*/

public class Solution {
    public int solve(ArrayList<Integer> A, int B) {
        int ans = 0;
        
        if(B > A.size()) {
            return 0;    
        }
        
        if(B == A.size()){
            for (Integer sum : A) {
                ans +=sum;
            }
        }else {
            
            for (int i = 0; i < B; i++) {
                ans += A.get(i);
            }
            
            int leftSum= ans;
            int rightSum = 0;
            int indexRight = A.size()-1;
            int indexLeft = B-1;
            
            for (int i = B-1 ; i >= 0; i--) {
                 leftSum -= A.get(indexLeft);
                 rightSum +=A.get(indexRight);
                 ans = Math.max(leftSum + rightSum, ans ); 
                 indexRight--;
                 indexLeft--;
                 
            }
        }
        return ans;
    }
}
